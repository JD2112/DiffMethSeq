{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://raw.githubusercontent.com/DNAm/master/nextflow_schema.json",
  "title": "DNAm pipeline parameters",
  "description": "An integrated analysis pipeline for DNA Methylation data based on Nextflow.",
  "type": "object",
  "definitions": {
    "input_output_options": {
      "title": "Input/output options",
      "type": "object",
      "fa_icon": "fas fa-terminal",
      "description": "Define where the pipeline should find input data and save output data.",
      "required": ["outdir"],
      "properties": {
        "outdir": {
          "type": "string",
          "format": "directory-path",
          "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
          "fa_icon": "fas fa-folder-open",
          "default": "/mnt/SD2/Jyotirmoys/JD/Scripts/MyScripts/JDCo/DNAmeth-Next/results"
        }
      }
    },
    "max_job_request_options": {
      "title": "Max job request options",
      "type": "object",
      "fa_icon": "fab fa-acquisitions-incorporated",
      "description": "Set the top limit for requested resources for any single job.",
      "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
      "properties": {
        "max_cpus": {
          "type": "integer",
          "description": "Maximum number of CPUs that can be requested for any single job.",
          "default": 20,
          "fa_icon": "fas fa-microchip",
          "hidden": true,
          "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
        },
        "max_memory": {
          "type": "string",
          "description": "Maximum amount of memory that can be requested for any single job.",
          "default": "100 GB",
          "fa_icon": "fas fa-memory",
          "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
          "hidden": true,
          "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
        },
        "max_time": {
          "type": "string",
          "description": "Maximum amount of time that can be requested for any single job.",
          "default": "10d",
          "fa_icon": "far fa-clock",
          "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+$",
          "hidden": true,
          "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/definitions/input_output_options"
    },
    {
      "$ref": "#/definitions/max_job_request_options"
    }
  ],
  "properties": {
    "tracedir": {
      "type": "string",
      "default": "/mnt/SD2/Jyotirmoys/JD/Scripts/MyScripts/JDCo/DNAmeth-Next/results/pipeline_info/",
      "description": "pipeline trace directory"
    },
    "formatted_designfile": {
      "type": "string",
      "description": "(.tsv) with columns, 'Sample_ID', 'input_R1', 'input_R2', 'ip_R1', 'ip_R2', 'Group_ID'"
    },
    "compare_str": {
      "type": "string",
      "description": "'treated_vs_control' (or whatever group you have to compare)"
    },
    "cov_dir": {
      "type": "string",
      "description": "(required for edgeR analysis): Path to the directory of bismark-generated zipped coverage files (deduplicated and sorted, if required)."
    },
    "bam_dir": {
      "type": "string",
      "description": "(required for MethylKit analysis): Path to the directory of bismark-generated bam files."
    },
    "reads_count_input1": {
      "type": "string"
    },
    "reads_count_input2": {
      "type": "string"
    },
    "phenoGroup": {
      "type": "string",
      "description": "(required for MethylKit analysis): to know the group information, e.g. if you have 6 samples, like 'control', 'patient', 'control', 'patient', 'control', 'patient', then the file needs a line like this - c(0,1,0,1,0,1,0,1)."
    }
  },
  "required": [
    "formatted_designfile",
    "compare_str",
    "cov_dir",
    "bam_dir",
    "phenoGroup"
  ]
}
